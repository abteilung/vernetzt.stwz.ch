prototype(Stwz.Navigation:Component.Navbar.Basket) < prototype(Neos.Fusion:Component) {
  
    content = Neos.Neos:ContentCollection {
        nodePath = ${ q(site).children('orderForm').property('_path') }
        collection = ${ q(site).children('orderForm').children() }
    }

	renderer = afx`
        <!-- Modal Background -->
        <div x-cloak>

            <div 
                x-show="showBasket"
                class="fixed inset-0 z-40 flex items-center justify-center overflow-auto bg-black bg-opacity-20 backdrop-blur-lg bg-blur-2xl" 
                x-transition:enter="transition ease duration-300" 
                x-transition:enter-start="opacity-0" 
                x-transition:enter-end="opacity-100" 
                x-transition:leave="transition ease duration-300" 
                x-transition:leave-start="opacity-100" 
                x-transition:leave-end="opacity-0"
            >

                <!-- Modal -->

                <Stwz.Navigation:Component.Navbar.Basket.CloseButton />

                <div 
                    class="container flex items-center justify-center h-screen " 
                    x-transition:enter="transition ease duration-100 transform" 
                    x-transition:enter-start="opacity-0 scale-90 translate-y-1" 
                    x-transition:enter-end="opacity-100 scale-100 translate-y-0" 
                    x-transition:leave="transition ease duration-100 transform" 
                    x-transition:leave-start="opacity-100 scale-100 translate-y-0" 
                    x-transition:leave-end="opacity-0 scale-90 translate-y-1"
                >
                    <div class="w-2/3 p-12 text-base bg-white contentPanel"
                        "@click.away"="showBasket = false" 
                        x-data="{ formOrder: localStorage.getItem('orderValue') }" 
                        x-init="$watch('formOrder', value => {localStorage.setItem('orderValue', value)})"
                    >
                        <h2 class="text-primary">{ I18n.translate('Abte.Site:Main:yourProducts') }</h2>
                    </div>
                </div>
            </div>
        </div>
    `

	// @cache {
	// 	mode = 'cached'
	// 	entryIdentifier.node = ${documentNode}
	// 	entryTags {
	// 		1 = ${Neos.Caching.nodeTypeTag('Neos.Neos:Document', documentNode)}
	// 	}
	// }
}
