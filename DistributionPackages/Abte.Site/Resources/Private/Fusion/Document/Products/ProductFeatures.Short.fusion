// Might be obsolete now

prototype(Abte.Site:Component.ProductFeatures.Short) < prototype(Neos.Fusion:Component) {

    node = ${ node }

    @context {
        node = ${ this.node }
    }

    features = Neos.Fusion:DataStructure {

        Kates = Neos.Fusion:Join {
            @if.hasValue = ${ q(node).property('categories') }
            @glue = ': '
            label = ${ I18n.translate('Abte.Site:Main:category') }
            value = Neos.Fusion:Loop {
                items = Neos.Fusion:Map {
                    items = ${ q(node).property('categories') }
                    itemRenderer = ${ q(item).get(0) }
                    @process.removeDuplicates = ${Array.unique(value)}
                }

                itemName = 'pcat'
                itemRenderer = ${ q(pcat).property('title') }
            } 
        }

        Artikel = Neos.Fusion:Join {
            @if.hasValue = ${ q(node).property('productID') }
            @glue = ': '
            label = ${ I18n.translate('Abte.Site:Main:artNr') }
            value = ${ q(node).property('productID') }
        }
        printerSpeed = Neos.Fusion:Join {
            @if.hasValue = ${ q(node).property('printerSpeed') }
            @glue = ': '
            label = ${ I18n.translate('Abte.Site:Main:printingSpeed') }
            value = ${ q(node).property('printerSpeed') }
        }
        dpi = Neos.Fusion:Join {
            @if.hasValue = ${ q(node).property('printerResolution') }
            @glue = ': '
            label = 'DPI'
            value = ${ q(node).property('printerResolution') }
        }
        Groesse = Neos.Fusion:Join {
            @if.hasValue = ${ q(node).property('productLabelWidth') }
            @if.isRectangle = ${!q(node).property('productDiameter') }
            @glue = ': '
            label = ${ I18n.translate('Abte.Site:Main:dimensions') }
            value = ${ q(node).property('productLabelWidth') + (q(node).property('productLabelHeight') ? ' x ' + q(node).property('productLabelHeight') : null) }
        }
        GroesseRund = Neos.Fusion:Join {
            @if.hasValue = ${ q(node).property('productWidth') }
            @if.isRectangle = ${q(node).property('productDiameter') }
            @glue = ': '
            label = ${ I18n.translate('Abte.Site:Main:diameter') }
            value = ${ q(node).property('productWidth') + ' x ' + q(node).property('productWidth') + ' x ' + q(node).property('productHeight') }
        }
        Form = Neos.Fusion:Join {
            @if.hasValue = ${ q(node).property('productForm') }
            @glue = ': '
            label = ${ I18n.translate('Abte.Site:Main:form') }
            value = ${ q(node).property('productForm') }
        }
        Material = Neos.Fusion:Join {
            @if.hasValue = ${ q(node).property('productMaterial') }
            @glue = ': '
            label = ${ I18n.translate('Abte.Site:Main:material') }
            value = ${ q(node).property('productMaterial') }
        }
        Gummierung = Neos.Fusion:Join {
            @if.hasValue = ${ q(node).property('productGummierung') }
            @glue = ': '
            label = ${ I18n.translate('Abte.Site:Main:gumming') }
            value = ${ q(node).property('productGummierung') }
        }        
        Ausfuehrung = Neos.Fusion:Join {
            @if.hasValue = ${ q(node).property('productAusfuehrung') }
            @glue = ': '
            label = ${ I18n.translate('Abte.Site:Main:execution') }
            value = ${ q(node).property('productAusfuehrung') }
        }        
        productMinOutlet = Neos.Fusion:Join {
            @if.hasValue = ${ q(node).property('productMinOutlet') }
            @glue = ': '
            label = ${ I18n.translate('Abte.Site:Main:passthroughMin') }
            value = ${ q(node).property('productMinOutlet') }
        }        
        productMaxOutlet = Neos.Fusion:Join {
            @if.hasValue = ${ q(node).property('productMaxOutlet') }
            @glue = ': '
            label = ${ I18n.translate('Abte.Site:Main:passthroughMax') }
            value = ${ q(node).property('productMaxOutlet') }
        }
    }

    renderer = afx`
        <ul class="!font-normal">
            <Neos.Fusion:Loop items={props.features}>
                <li class="!tracking-normal !py-0 p">{item}</li>
            </Neos.Fusion:Loop>
        </ul>
    `
}