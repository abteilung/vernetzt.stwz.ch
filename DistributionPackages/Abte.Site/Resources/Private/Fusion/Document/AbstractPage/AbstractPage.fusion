
##
# This prototypes object are sequenctially rendered as strings
# and output to form the the html response.
#
# For all the base data, see Neos.Neos:Page
##
prototype(Abte.Site:Document.AbstractPage) < prototype(Neos.Neos:Page) {

    httpResponseHead {
        headers {
            'Access-Control-Allow-Origin' = 'https://stwz.arc.fibx.ch/'
            'Access-Control-Allow-Credentials' = 'true'
            'Access-Control-Allow-Headers' = 'Content-Type, Cookie, Credentials'
            'X-Frame-Options' = 'allow-from https://stwz.arc.fibx.ch/'
	        'Strict-Transport-Security' = 'max-age=31536000; includeSubDomains; preload env=HTTPS'
        }
    }

    head {
        headTags = Neos.Fusion:Join {
            @glue = ''
            comp = '<meta http-equiv="x-ua-compatible" content="ie=edge" />''
            scale = '<meta name="viewport" content="width=device-width, initial-scale=1.0" />'
            favIcons = Abte.Site:Component.Favicons
        }

        titleTag = Neos.Fusion:Tag {
            tagName = 'title'
            content = ${ q(node).property('title') +  '| StWZ Vernetzt' }
        }
    }

    htmlTag {
        attributes {
            class = "scroll-smooth"
            lang = ${ node.context.targetDimensions.language }
        }
    }

    bodyTag {
        attributes {
            data-theme="stwztgen"
            x-data="\{ showAlert : true, showMoadal: true, showMenu : false \}"
        }
    }

    @context.siteLocale = ${ Array.first(node.context.dimensions.language) }

    body = Abte.Site:Component.DefaultLayout {
        content {
            main = Neos.Neos:ContentCollection {
                nodePath = 'main'
                default.renderer.attributes.class = ''
            }
        }
    }
}


ContentCollectionRenderer {
    @process.addClass=${value}
}