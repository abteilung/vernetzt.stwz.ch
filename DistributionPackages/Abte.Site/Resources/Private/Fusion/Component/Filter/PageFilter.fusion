prototype(Abte.Site:Component.PageFilter) < prototype(Neos.Fusion:Component) {

  node = ${ node }
  @context {
    node = ${ this.node }
  }

  showAllFilter = false

  categoryItems = Neos.Neos:MenuItems {
      itemCollection = ${ q(node).children('[instanceof Abte.Site:Document.Category]') ? q(node).children('[instanceof Abte.Site:Document.Category]').get() : null }
      filter = ${ 'Abte.Site:Document.Category' }
  }

  itemsWrapClass = Neos.Fusion:Case {
      // projects {
      //   condition = ${ q(node).is('[instanceof Abte.Site:Document.Projects]') }
      //   renderer = 'mt-12 mixitupContent'
      // }
      fallback {
        condition = ${ true }
        renderer = 'grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 mt-12 gridgap mixitupContent'
      }
  }

  filterItems = Neos.Fusion:Loop {
      items = ${ q(documentNode).find('[instanceof Abte.Site:Document.Story],[instanceof Abte.Site:Document.Project]').get() }
      itemName = 'element'
      iterationName = 'i'
      itemRenderer = Neos.Fusion:Case {
        newsItem {
          condition = ${ q(node).is('[instanceof Abte.Site:Document.FilterPage]') }
          renderer = Abte.Site:Component.NewsCard {
            node = ${ q(element) }
          }
        }
        fallback {
          condition = ${ true }
          renderer = Abte.Site:Component.ImageCard {
            node = ${ q(element) }
          }
        }
        
      }
        
      // itemRenderer.@if.isWithinLimitsOfFour= ${ i.cycle <= 4 ? true : false }
      // @process.removeDuplicates = ${Array.unique(value)}
  }

  renderer = afx`
    <div id="filterContainer" data-ref="filterContainer">

      <div class="filter">

        <!-- Dropdown menu on small screens -->
        <div class="lg:hidden">
          <label for="mixitup-tab" class="sr-only">Select a tab</label>
          <select id="mixitup-tab" name="mixitup-tab" class="block w-full py-2 pl-3 pr-10 text-base border-2 rounded-md focus:outline-none focus:ring-primary border-primary focus:border-primary sm:text-sm">
            <option value="all"
                @if.showAllFilter={props.showAllFilter}
            >{ I18n.translate('Abte.Site:Main:all') }</option>
            <Neos.Fusion:Loop 
                items={props.categoryItems} 
                iterationName='i'
                @if.hasCats={props.categoryItems}
            >
                <option 
                    value={ Carbon.String.urlize( q(item.node).property('title') ) }
                >
                  {q(item.node).property('title')}
                </option>
            </Neos.Fusion:Loop>
          </select>
        </div>

        <!-- Tabs at lg breakpoint and up -->
        <div class="container hidden lg:block">
          <nav 
            class="flex space-x-6 border-b-2 xl:space-x-8 lead border-base-100 mixitupFilter" 
            aria-label="Tabs"
          >
            <div
              @if.showAllFilter={props.showAllFilter}
              id="filterAll"
              data-filter="all"
              class="mixitup-control-default"
            >
              { I18n.translate('Abte.Site:Main:all') }
            </div>

            <Neos.Fusion:Loop 
              items={props.categoryItems} 
              iterationName='i'
              @if.hasCats={props.categoryItems}
            >

              <div
                  x-data="{ show: false }"
                  class="relative"
              >
                <div 
                    "@mouseover"="show = true"
                    "@mouseout"="show = !true"
                    class="relative filter-box"
                >
                  <div class="flex">
                    <Abte.Site:Component.filterButton 
                        node={item.node} 
                        content={q(item.node).property('title')}
                    />

                    <Abte.Site:Component.navCaret 
                      @if.hasSubsOfTypeCate={ q(item.node).children('[instanceof Abte.Site:Document.Category]').count() > 0 ? true : false }
                    />
                  </div>

                  <div 
                    x-show="show"
                    "@click.away"="show = false" 
                    x-transition:enter="transition duration-300"
                    x-transition:enter-start="opacity-0"
                    x-transition:enter-end="opacity-100"
                    x-transition:leave="transition duration-300"
                    x-transition:leave-start="opacity-100"
                    x-transition:leave-end="opacity-0"
                    class={props.subMenuOrientation + ' ' + ' absolute right-0 z-20 w-72 mt-4 origin-top-right'}
                  >
                    <div role="none">
                      <Neos.Fusion:Loop items={item.subItems}>
                        <Abte.Site:Component.filterButton 
                          node={item.node} 
                          content={q(item.node).property('title')}
                        />
                      </Neos.Fusion:Loop>
                    </div>
                  </div>
            
                </div>
              </div>

            </Neos.Fusion:Loop>

          </nav>
        </div>
      </div>
      <div class={props.itemsWrapClass}>
        {props.filterItems}
      </div>
    </div>
  `

}

prototype(Abte.Site:Component.Navigation.Filter) < prototype(Neos.Fusion:Component) {

    filterItemsFromCategories = Neos.Neos:MenuItems {
        itemCollection = ${ q(node).children('[instanceof Abte.Site:Document.Category]') ? q(node).children('[instanceof Abte.Site:Document.Category]').get() : null }
        filter = ${ 'Abte.Site:Document.Category' }
    }

    renderer = afx`
        <div 
            id="filterOptions" 
            class="flex justify-between block py-4 mb-12 responsiveMargin"
        >
            <div class="container z-20 flex pb-4 space-x-6 text-left border-b-2 border-base-100">
                <div class="flex space-x-6">
                    
                    <Abte.Site:Component.filterMenuSection 
                        filterName="kate"
                        menuItems={props.filterItemsFromCategories} 
                    />
                    
                </div>
            </div>
		</div>
    `
}


prototype(Abte.Site:Component.navCaret) < prototype(Neos.Fusion:Component) {
    renderer = afx`
        <svg
            width="16"
            class={'mt-1 ml-1 -rotate-90 text-navigation text-primary'}
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            >
            <path
                d="M16.2426 6.34317L14.8284 4.92896L7.75739 12L14.8285 19.0711L16.2427 17.6569L10.5858 12L16.2426 6.34317Z"
                fill="currentColor"
            />
        </svg>
    `
}

