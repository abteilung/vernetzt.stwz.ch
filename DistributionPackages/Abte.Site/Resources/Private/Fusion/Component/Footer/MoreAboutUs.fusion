
prototype(Abte.Site:Component.MoreAboutUs) < prototype(Neos.Neos:ContentComponent) {
    
    imageSource = Sitegeist.Kaleidoscope:AssetImageSource {
        asset   = ${ q(node).closest("[instanceof Neos.Neos:Document][footerImage][footerImage != '']").property('footerImage') }
    }

    user = ${ q(node).closest("[instanceof Neos.Neos:Document][zitatUser][zitatUser != '']").property('zitatUser') }
    
    quote = ${ q(this.user).property('quote') }

    link = ${ q(site).children('[uriPathSegment="ueber-uns"]').get(0) }

    renderer = afx`
        <div class="flex flex-wrap-reverse mt-18 md:flex-wrap bg-base-100 lg:mt-24"
            @if.hasPerson={props.user}
        >
            <div class="w-full md:w-1/3 min-h-[250px] md:min-h-[350px] lg:min-h-[450px] 2xl:min-h-[600px]">
                <Sitegeist.Lazybones:Image 
                    @if.hasImage={props.imageSource}
                    imageSource={props.imageSource} 
                    width="800"
                    height="800"
                    class="object-cover object-center w-full h-full"
                />
            </div>
            <div class="flex items-center w-full md:w-2/3 gridPadding xl:px-24 2xl:px-48">
                <div class="">
                    <blockquote class="mb-8 lg:mb-12 2xl:mb-24 lead"
                        @if.hasQuote={props.quote}
                    >
                        «{props.quote}»
                    </blockquote>
                    
                    <Abte.Site:Component.Avatar node={props.user}/>
                    
                    <Abte.Site:Component.Link 
                        target={props.link} 
                        class="block"
                        align="text-right"
                        text={ I18n.translate('Abte.Site:Main:moreAboutUs') }
                    />
                </div>

            </div>
        </div>
    `

    @cache {
        mode = 'cached'
        entryIdentifier {
            site = ${site}
        }
        entryTags {
            1 = ${Neos.Caching.nodeTag(site)}
            2 = ${Neos.Caching.nodeTypeTag('Abte.Site:Document.Person', documentNode)}
        }
    }
    
}
