
prototype(Abte.Site:Component.SupportButton) < prototype(Neos.Fusion:Component) {

    node = ${ node }
    @context {
        node = ${ this.node }
    }
    
    menuItemsArray = ${ q(node).property('supportItems') }
    
    @context {
        menuItemsArray = ${ this.menuItemsArray }
    }

	menuItems = Neos.Neos:MenuItems {
        itemCollection = ${ q(site).property('supportItems') ? q(site).property('supportItems') : null }
        filter = 'Neos.Neos:Document,!Abte.Site:Document.MenuSeparator'
        renderHiddenInIndex = ${ true }
    }

    phone = ${ q(site).property('helpdeskPhone') }

    email = ${ q(site).property('helpdeskEmail') }

    class = ''
    
    renderer = afx`
        <div 
            x-data="{ appear: false }" 
            x-show="appear" 
            x-init="setTimeout(() => appear = true, 500)"
            x-transition:enter="transition duration-500"
            x-transition:enter-start="opacity-0"
            x-transition:enter-end="opacity-100"
            class="fixed right-0 group z-100 top-48"
        >
            <div
                x-init="appear = (appear)"
                x-cloak
            >
                <div
                    x-data="\{ 'open' : false \}"
                >
                    <div 
                        class="flex flex-wrap items-center overflow-hidden transition-all duration-500 bg-white shadow-xl rounded-l-xl"
                        "@click.away"="open = false" 
                        :class="open ? 'w-72 h-80 px-4 justify-left' : 'w-16 h-16 md:w-20 md:h-20 justify-center'"
                    >
                        <div class="flex items-center justify-center w-16 h-16 cursor-pointer md:w-20 md:h-20">
                            <div 
                                "@click.prevent"="open = !open" 
                                class="relative flex flex-wrap justify-center text-center text-black delay-500"
                            >
                                <Abte.Site:Icon.Support class="scale-75" />
                                <p class="hidden text-sm md:flex">Support</p>
                            </div>
                        </div>

                        <div 
                            class="flex justify-between w-full pb-1 transition-all duration-300 md:pb-2 navArea"
                            :class="open ? 'opacity-100 delay-500' : 'delay-150 opacity-0'"
                        >

                            <div class="w-full space-y-3">
                                <Carbon.Link:Link 
                                    additionalClass="w-fit text-sm block hover:underline rounded-full bg-accent font-extrabold px-4 py-2" 
                                    link={'tel:' + String.replace(String.pregReplace(props.phone, "'/[^0-9]/'", ''), ' ', '')} 
                                    renderDefaultTagIfNoLink='true'
                                >
                                    <Neos.Neos:Editable property="helpdeskPhone" node={site} />
                                </Carbon.Link:Link>
                                <Carbon.Link:Link 
                                    additionalClass="w-fit text-sm block hover:underline rounded-full bg-base-300 font-extrabold px-4 py-2" 
                                    link={'mailto:' + props.email} 
                                    renderDefaultTagIfNoLink='true'
                                >
                                    <Neos.Neos:Editable property="helpdeskEmail" node={site} />
                                </Carbon.Link:Link>


                                <nav class="supportButton">
                                    <ul class="space-y-3">
                                        <Neos.Fusion:Loop items={props.menuItems}>
                                            <li>
                                                <hr class="border-black border-t-[1px] mb-2"/>
                                                <Carbon.Link:Link 
                                                    node={item.node}
                                                    attributes.class="block text-sm font-normal truncate hover:text-primary"
                                                >
                                                    {item.label}
                                                </Carbon.Link:Link>

                                            </li>
                                        </Neos.Fusion:Loop>
                                    </ul>
                                </nav>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    `

    @cache {
        mode = 'cached'
        entryIdentifier {
            node = ${node}
        }
        entryTags {
            1 = ${Neos.Caching.nodeTag(node)}
            2 = ${Neos.Caching.nodeTag(menuItemsArray)}
            3 = ${Neos.Caching.descendantOfTag(menuItemsArray)}
        }
    }    
}
