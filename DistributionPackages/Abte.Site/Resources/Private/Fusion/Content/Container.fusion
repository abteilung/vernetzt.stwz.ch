
prototype(Abte.Site:Content.Container) < prototype(Neos.Neos:ContentComponent) {

    node = ${ node }
    @context {
        node = ${ this.node }
    }

    class = 'relative gridPadding'

    fullWidth = ${ q(node).property('fullWidth') }
    
    wideContainer = ${ q(node).property('wideContainer') }
    
    contentFullWidth = ${ q(node).property('contentFullWidth') ? null : this.wideContainer ? 'container-wide' : 'container' }

    fullWidthClass = ${ this.fullWidth ? 'cnt-container' : this.wideContainer ? 'container-wide' : 'container' }
    
    dropShadow = ${ q(node).property('dropShadow') }
    
    removePadding = ${ q(node).property('removePadding') ? '!py-0' : '' }

    bgColor = ${ q(node).property('bgColor') }

    shadowClass = ${ (this.dropShadow ? 'box-shadow p-8' : null ) + ' ' + this.bgColor }

    title = Neos.Neos:Editable {
        property = 'title'
        node = ${ node}
    }

    subTitle = Neos.Neos:Editable {
        property = 'subTitle'
        node = ${ node}
    }
    
    link = ${ q(node).property('link') }

    linkText = Neos.Neos:Editable {
        property = 'linkText'
        node = ${ node}
        block = ${ false }
    }

	content = Neos.Neos:ContentCollectionRenderer {
        @process.contentElementWrapping = Neos.Neos:ContentElementWrapping {
            @position = 'end'
        }
	}

  	renderer = afx`
        <div 
            id={'id-' + q(node).property('_nodeName')}
            class={props.class + ' ' + props.removePadding + ' ' + props.shadowClass + ' ' + props.fullWidthClass}
        >
            
            <div class={props.contentFullWidth}>
                <div class="flex flex-wrap items-start mb-4 gap-x-6 md:mb-8 lg:mb-12 containerHeader"
                    @if.hasTitleOrLink={ props.title ? true : props.link ? true : false }
                >
                    <h2 class="text-black h1">{props.title}</h2>
                    <Neos.Fusion:Augmenter "@click"="$dispatch('toggle-addresslookup');">
                        <Abte.Site:Content.Button 
                            text={props.linkText} 
                            target={props.link}
                            spacing="px-3 py-1"
                            class="text-sm text-black bg-accent" 
                            @if.hasLinkText={props.linkText}
                        />
                    </Neos.Fusion:Augmenter>
                </div>
                
                <div>
                    {props.content}
                </div>
            </div>
            
        </div>
    `
}

// bg-base-100 bg-base-200 bg-base-300 bg-accent bg-primary bg-primary-focus bg-secondar bg-secondary-focus bg-accent-focus bg-error bg-neutral
