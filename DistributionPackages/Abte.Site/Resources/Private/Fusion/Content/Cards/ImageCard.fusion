prototype(Abte.Site:Content.ImageCard) < prototype(Neos.Neos:ContentComponent) {
    
    node = ${ node }
    @context {
        node = ${ this.node }
    }
    
    imageSource = Sitegeist.Kaleidoscope:AssetImageSource {
        // asset   = ${ q(node).property('image') || q(node).find('[instanceof Neos.Neos:Content][image instanceof "Neos\Media\Domain\Model\ImageInterface"]').get(0) }
        asset   = ${ q(node).property('image') }
    }

    title = Neos.Neos:Editable {
        property = 'title'
    }

    subTitle = Neos.Neos:Editable {
        property = 'subTitle'
    }

    arrow = Abte.Site:Icon.ArrowRight {
        class = 'absolute block w-6 text-black duration-150 scale-75 right-4 bottom-4 text-arrow group-hover:right-2'
        @if.hasLink = ${ q(node).property('target') }
    }

    target = ${ q(node).property('target') }
    target.@process.convertUris = Neos.Neos:ConvertUris {
        forceConversion = true
    }

    class = Abte.Site:Component.AdditionalClass {
        class = 'relative block group w-full h-full mix font-light'
    }

    renderer = afx`
        <Carbon.Link:Link 
            link={props.target} 
            renderDefaultTagIfNoLink={true}
            attributes.class={ props.class }
        >

            <div class="relative overflow-hidden isolate rounded-t-2xl">
                
                <Sitegeist.Kaleidoscope:Image 
                    @if.hasImage={props.imageSource}
                    imageSource={props.imageSource} 
                    width="700"
                    height="350"
                    class={props.target ? 'object-cover object-center w-full h-full duration-300 scale-105 group-hover:scale-100 bg-tertiary-focus' : 'object-cover object-center w-full h-full duration-300 bg-tertiary-focus'}
                />

            </div>
            <div class="relative px-4 pt-4 pb-8 bg-white">
                <h3 class="mb-2 font-extrabold">{props.title}</h3>
                <p class="text-sm">{props.subTitle}</p>
                {props.arrow}
            </div>

        </Carbon.Link:Link>
    `
}