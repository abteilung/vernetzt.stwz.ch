prototype(Abte.Site:Content.Accordion) < prototype(Neos.Neos:ContentComponent) {

    class = 'overflow-hidden'

    isShop = ${ q(node).property('accordion_isShop') ? 'grid md:grid-cols-3 xl:grid-cols-4 gridgap-x' : null }

    bgColor = ${ q(node).property('bgColor') }

    accordionClass = ${ this.class + ' ' +  this.isShop }
    innerClass = ${ q(node).property('accordion_isShop') ? 'md:col-span-2 xl:col-span-3' : null }

    accordionItems = Neos.Fusion:Collection {
        collection = ${ q(node).children('[instanceof Abte.Site:Content.Accordion.Item]') }
        itemName = 'node'
        iterationName = 'i'
        itemRenderer = Abte.Site:Content.Accordion.Item
    }

    isOpen = Neos.Fusion:Case {
        pageOverride {
            condition = ${ q(documentNode).property('accordion_open') }
            renderer = ${ q(documentNode).property('accordion_open') }
        }
        fallback {
            condition = ${ true }
            renderer = Neos.Fusion:Collection {
                collection = ${ q(node).children('[instanceof Abte.Site:Content.Accordion.Item]') }
                itemName = 'node'
                iterationName = 'i'
                itemRenderer = ${ q(node).property('accordion_open') ? i.cycle : null }
            }
        }
    } 

    title = Neos.Neos:Editable {
        property = 'title'
    }

    subTitle = Neos.Neos:Editable {
        property = 'subTitle'
    }

    imageSource = Sitegeist.Kaleidoscope:AssetImageSource {
        asset   = ${ q(node).property('image') }
    }

    grandTotal = '89.–'


  	renderer = afx`

        <Stwz.AddressLookup:Component.Form 
            @if.isOnPage={q(documentNode).is('[instanceof Abte.Site:Document.Product]')}
        />

        <div class={props.accordionClass}>
            <div class={props.innerClass}>

                <div
                    class={ props.imageSource ? 'relative col-span-2' : 'relative' }
                >
                    <div
                        x-data={"{selected: " + '\'' +  props.isOpen + '\'' + " }"}
                        class='accordion border-t-[1px] border-black'
                    >
                        {props.accordionItems}
                    </div>
                </div>
                <div class="h-full">
                    <Sitegeist.Kaleidoscope:Image 
                        @if.hasImage={props.imageSource}
                        imageSource={props.imageSource} 
                        width="700"
                        height="700"
                        class="object-cover object-center w-full h-full"
                    />
                </div>
            </div>
            <div class=""
                @if.isShop={props.isShop}
                x-data="cart"
                x-init="count"
                "@item-reset.window"="count"
                "@item-changed.window"="count"

            >
                <div class="sticky p-6 bg-primary top-12">
                    <div class="flex items-center justify-between mb-6">
                        <div class="!mb-0 text-white h1">Ihr Abo</div>

                        <button 
                            x-on:click={"resetAll(); $dispatch('item-reset');"}
                            class="flex gap-1 text-white top-8 right-8"
                        >
                            <div class="block my-auto">
                                <Abte.Site:Icon.Refresh />
                            </div>
                            <div class="block my-auto">
                            <!-- <span>Reset</span> -->
                        </div>
                    </button>                        
                    </div>
                    <!-- <div class="relative h-24 pricing">
                        <div class="text-xl text-white" x-text="total + '.–'"></div>
                            <Abte.Site:Icon.Diagonal class="absolute top-0 text-white left-8" />
                        <div class="absolute text-xl text-white top-8 left-20">CHF</div>
                    </div> -->

                    <Abte.Site:Component.BestellUebersicht />
                    <Abte.Site:Content.Button outerClass="text-center" conditionalShow={true} class="text-base text-white bg-black" text="Jetzt bestellen" />
                </div>
            </div>
        </div>
    `
    
    @cache {
        mode = 'cached'
        entryIdentifier {
            node = ${documentNode}
        }
        entryTags {
			1 = ${Neos.Caching.nodeTypeTag('Abte.Site:Document.Product', documentNode)}
        }
    }


}