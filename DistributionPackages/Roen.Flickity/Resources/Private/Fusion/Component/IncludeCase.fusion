prototype(Roen.Flickity:IncludeCase) < prototype(Neos.Fusion:Component) {
    alwaysInclude = ${Configuration.setting('Roen.Flickity.alwaysInclude')}
    selectorCollection = ${Configuration.setting('Roen.Flickity.selector.collection')}
    selectorContent = ${Configuration.setting('Roen.Flickity.selector.content')}
    selectorOnDocument = ${Configuration.setting('Roen.Flickity.selector.onDocument')}

    includeInBackend = true
    node = ${documentNode}

    renderer = Neos.Fusion:Case {
        alwaysInclude {
            condition = ${props.alwaysInclude}
            renderer = true
        }
        inBackend {
            condition = ${node.context.inBackend}
            renderer = ${props.includeInBackend}
        }
        onDocument {
            condition = ${props.selectorOnDocument && q(props.node).is(props.selectorOnDocument)}
            renderer = true
        }
        inContent {
            condition = ${props.selectorContent && q(props.node).children(props.selectorCollection).find(props.selectorContent).is()}
            renderer = true
        }
        default {
            condition = true
            renderer = false
        }
    }
}
