prototype(Stwz.AddressLookup:Component.Form) < prototype(Neos.Fusion:Component) {

    icon = Abte.Site:Icon.Connection {
        class = ''
    }

    url = Neos.Fusion:UriBuilder {
        package = 'Stwz.AddressLookup'
        controller = 'Api'
        action = 'fetch'
        format = 'json'
    }

    renderer = afx`
        <div 
             class="max-w-screen-lg mx-auto addressLookup gridPadding-x"
             x-data={"addresslookup"}
             x-init={"{url: '" + props.url + "'}"} 
             data-url={props.url} >
            <div 
                class="relative z-30 flex items-center px-6 py-4 mx-auto my-4 md:my-16 md:space-x-8 lg:py-0 group lg:h-36 lg:px-16 rounded-3xl md:rounded-full bg-accent"
                id="addressLookup"                    
            >
                <div class="hidden md:flex">{props.icon}</div>
                <div class="w-full my-3">
                    <h3 class="mb-4 font-extrabold text-black">Glasfaseranschluss prüfen</h3>
                    <div id="addressLookupForm" class="grid w-full grid-cols-4 gap-4 md:grid-cols-8 lg:grid-cols-9">
                        <input class="col-span-1" type="number" x-model="address.zip_code" placeholder="PLZ" />
                        <div class="relative col-span-3">
                            <input 
                                id="city" 
                                class="w-full" 
                                :class="validation.city == 'Pflichtfeld' ? '!border-primary' : '!border-black'"
                                type="text" x-model="address.city" placeholder="Ort*" 
                                required="required" 
                            />
                            <Stwz.AddressLookup:Component.FormValidation property="city" />
                        </div>
                        <div class="col-span-3">
                            <input 
                                id="streetname" 
                                class="w-full" 
                                :class="validation.streetname == 'Pflichtfeld' ? '!border-primary' : '!border-black'"
                                type="text" x-model="address.streetname"placeholder="Strasse*" required="required" />

                            <Stwz.AddressLookup:Component.FormValidation property="streetname" />
                        </div>
                        <div class="col-span-1">
                            <input 
                                id="house_number"
                                class="w-full" 
                                :class="validation.house_number == 'Pflichtfeld' ? '!border-primary' : '!border-black'"
                                type="number" x-model="address.house_number" placeholder="Nr.*" required="required" />
                            <Stwz.AddressLookup:Component.FormValidation property="house_number" />
                        </div>
                        <input type="hidden" x-model="address.country" placeholder="Land" value="Schweiz" />
                        <input type="hidden" x-model="url" value={props.url} />

                        <button 
                            class="col-span-2 lg:col-span-1 button !px-1" 
                            type="submit"
                            id="addressCheckButton"
                            x-on:click={"check"}
                        >
                            <span x-cloak x-show="loading">
                                <Abte.Site:Icon.Refresh class="inline animate-spin" />
                            </span>
                            <span x-cloak x-show="!loading">Prüfen</span>
                        </button>
                    </div>
                </div>
            </div>

            <div id="addressMessages" class="relative z-30" x-cloak>
                <div 
                    class="relative p-6 my-16 group lg:p-12 rounded-3xl box-shadow"
                    x-show="error"
                    x-transition:enter="transition duration-300"
                    x-transition:enter-start="opacity-0"
                    x-transition:enter-end="opacity-100"
                    x-transition:leave="transition duration-300"
                    x-transition:leave-start="opacity-100"
                    x-transition:leave-end="opacity-0"
                >
                    <div class="mb-2">
                        <h3 class="">Für diese Adresse exisitert noch kein Anschluss.</h3>
                        <p>Überprüfe deine Angaben oder registriere dich, um zu erfahren, wann dein Anschluss freigeschaltet wird.</p>
                    </div>
                    <div class="relative mt-2">

                        <Carbon.IncludeAssets:File file="resource://Onedrop.AjaxForm/Public/JavaScript/form.js" />
                        <Onedrop.AjaxForm:Form formIdentifier="contact-form" />                        

                    </div>
                </div>
                <div 
                    class="relative flex items-center px-6 mx-auto my-16 space-x-8 bg-white group h-36 lg:px-16 rounded-3xl box-shadow"
                    x-show="success"
                    x-on:click.away="success = false"
                    x-transition:enter="transition duration-300"
                    x-transition:enter-start="opacity-0"
                    x-transition:enter-end="opacity-100"
                    x-transition:leave="transition duration-300"
                    x-transition:leave-start="opacity-100"
                    x-transition:leave-end="opacity-0"
                >
                    <p>
                        Die angefragte Adresse ist angeschlossen.
                    </p>
                    <Abte.Site:Content.Button class="text-white duration-150 scale-100 bg-black hover:scale-105 align-right" text="Zum Angebot" iconAfter="" target="#id-node-lrtwjedsk838h" />
                </div>
            </div> 

        </div>

    `
}



prototype(Stwz.AddressLookup:Component.FormValidation) < prototype(Neos.Fusion:Component) {

    property = ''

    renderer = afx`
        <div 
            x-cloak 
            x-show={'validation.' + props.property} class="flex items-center py-1"
        >
            <span
                class="ml-2 text-xs font-medium"
                :class={"{'opacity-0': address." + props.property + ", 'text-black': !address." + props.property + "}"} 
                x-text={'validation.' + props.property}>
            </span>
        </div>
    `
}