{
  "version": 3,
  "sources": ["../../Private/Fusion/AddressLookup.js"],
  "sourcesContent": ["document.addEventListener('alpine:init', () => {\n    Alpine.data('addresslookup', () => ({\n        \n        url: document.getElementById('addressLookup').dataset.url,\n        error: false,\n        success: false,\n        loading: false,\n        response: '',\n        \n        address: {\n            city: '',\n            country: '',\n            zip_code: '',\n            streetname: '',\n            house_number: '',\n            house_number_suffix: ''\n        },\n\n        validation: {\n            city: '',\n            street: '',\n            house_number: '',\n            required: {\n                message: 'Pflichtfeld'\n            }\n        },\n        \n        check() {\n            \n            if (!this.address.city.length){ this.validation.city = this.validation.required.message; } \n            if (!this.address.streetname.length){ this.validation.streetname = this.validation.required.message; } \n            if (!this.address.house_number.length){ this.validation.house_number = this.validation.required.message; return; } \n\n            this.loading = true;\n            console.log(this.url);\n            fetch(\n                this.url   +'?streetname='+ this.address.streetname \n                           +'&zip='+ this.address.zip_code \n                           +'&city='+ this.address.city \n                           +'&country='+ this.address.country\n                           +'&houseNumber='+ this.address.house_number \n                           +'&houseNumberSuffix='+ this.address.house_number_suffix\n                ,{\n                    method: 'GET', \n                    headers: { 'Content-Type': 'application/json'}\n            })\n            .then(response => response.json())\n            .then(data => {\n                if(data.status == 'success'){\n                    this.loading = false;\n                    this.success = true;\n                    this.error = !this.success;\n                    let event = new CustomEvent('addresslookup-success', {});\n                    window.dispatchEvent(event);\n                }else{\n                    this.loading = false;\n                    this.success = false;\n                    this.error = !this.success;\n                    let event = new CustomEvent('addresslookup-error', {});\n                    window.dispatchEvent(event);\n                }\n                return data;\n            })\n            .catch(error => {\n                this.loading = false;\n                return error;\n            });\n        },\n    }))\n});\n\n\n// document.addEventListener('alpine:init', () => {\n\n        \n//     Alpine.data('addresslookup', () => ({\n        \n//         url: document.getElementById('addressLookup').dataset.url,\n//         error: false,\n//         success: false,\n//         loading: false,\n//         response: '',\n        \n//         address: {\n//             city: '',\n//             country: '',\n//             zip_code: '',\n//             streetname: '',\n//             house_number: '',\n//             house_number_suffix: ''\n//         },\n\n//         validation: {\n//             city: '',\n//             street: '',\n//             house_number: '',\n//             required: {\n//                 message: 'Pflichtfeld'\n//             }\n//         },\n\n//         check() {\n//     const form = document.getElementById('addressLookupForm');\n//             const city = document.getElementById('city');\n//             const streetname = document.getElementById('streetname');\n//             const house_number = document.getElementById('house_number');\n\n//             //Show input error messages\n//             function showError(input, message) {\n//                 const formControl = input.parentElement;\n//                 formControl.className = 'form-control error';\n//                 const small = formControl.querySelector('small');\n//                 small.innerText = message;\n//             }\n\n//             //show success colour\n//             function showSucces(input) {\n//                 const formControl = input.parentElement;\n//                 formControl.className = 'form-control success';\n//                 console.log('success');\n//             }\n\n//             //get FieldName\n//             function getFieldName(input) {\n//                 return input.id.charAt(0).toUpperCase() + input.id.slice(1);\n//             }\n\n//             //checkRequired fields\n//             function checkRequired(inputArr) {\n//                 inputArr.forEach(function(input){\n//                     if(input.value.trim() === ''){\n//                         showError(input,`${getFieldName(input)} is required`);\n//                         console.log('false-ish');\n//                     }else {\n//                         showSucces(input);\n//                         console.log('okay-ish');\n\n//                         this.loading = true;\n//                         console.log(this.url);\n//                         fetch(\n//                             this.url    +'?streetname='+ this.address.streetname \n//                                         +'&zip='+ this.address.zip_code \n//                                         +'&city='+ this.address.city \n//                                         +'&country='+ this.address.country\n//                                         +'&houseNumber='+ this.address.house_number \n//                                         +'&houseNumberSuffix='+ this.address.house_number_suffix\n//                             ,{\n//                                 method: 'GET', \n//                                 headers: { 'Content-Type': 'application/json'}\n//                         })\n//                         .then(response => response.json())\n//                         .then(data => {\n//                             if(data.status == 'success'){\n//                                 this.loading = false;\n//                                 this.success = true;\n//                                 this.error = !this.success;\n//                                 let event = new CustomEvent('addresslookup-success', {});\n//                                 window.dispatchEvent(event);\n//                             }else{\n//                                 this.loading = false;\n//                                 this.success = false;\n//                                 this.error = !this.success;\n//                                 let event = new CustomEvent('addresslookup-error', {});\n//                                 window.dispatchEvent(event);\n//                             }\n//                             return data;\n//                         })\n//                         .catch(error => {\n//                             this.loading = false;\n//                             return error;\n//                         });\n\n//                     }\n//                 });\n//             }\n        \n//             form.addEventListener('submit',function(e) {\n//                 e.preventDefault();\n//                 checkRequired([city, streetname, house_number]);\n//             });\n//         },\n    \n//     }))\n// });\n\n"],
  "mappings": ";;AAAA,WAAS,iBAAiB,eAAe,MAAM;AAC3C,WAAO,KAAK,iBAAiB,MAAO;AAAA,MAEhC,KAAK,SAAS,eAAe,eAAe,EAAE,QAAQ;AAAA,MACtD,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,UAAU;AAAA,MAEV,SAAS;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,cAAc;AAAA,QACd,qBAAqB;AAAA,MACzB;AAAA,MAEA,YAAY;AAAA,QACR,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,cAAc;AAAA,QACd,UAAU;AAAA,UACN,SAAS;AAAA,QACb;AAAA,MACJ;AAAA,MAEA,QAAQ;AAEJ,YAAI,CAAC,KAAK,QAAQ,KAAK,QAAO;AAAE,eAAK,WAAW,OAAO,KAAK,WAAW,SAAS;AAAA,QAAS;AACzF,YAAI,CAAC,KAAK,QAAQ,WAAW,QAAO;AAAE,eAAK,WAAW,aAAa,KAAK,WAAW,SAAS;AAAA,QAAS;AACrG,YAAI,CAAC,KAAK,QAAQ,aAAa,QAAO;AAAE,eAAK,WAAW,eAAe,KAAK,WAAW,SAAS;AAAS;AAAA,QAAQ;AAEjH,aAAK,UAAU;AACf,gBAAQ,IAAI,KAAK,GAAG;AACpB,cACI,KAAK,MAAO,iBAAgB,KAAK,QAAQ,aAC7B,UAAS,KAAK,QAAQ,WACtB,WAAU,KAAK,QAAQ,OACvB,cAAa,KAAK,QAAQ,UAC1B,kBAAiB,KAAK,QAAQ,eAC9B,wBAAuB,KAAK,QAAQ,qBAC/C;AAAA,UACG,QAAQ;AAAA,UACR,SAAS,EAAE,gBAAgB,mBAAkB;AAAA,QACrD,CAAC,EACA,KAAK,cAAY,SAAS,KAAK,CAAC,EAChC,KAAK,UAAQ;AACV,cAAG,KAAK,UAAU,WAAU;AACxB,iBAAK,UAAU;AACf,iBAAK,UAAU;AACf,iBAAK,QAAQ,CAAC,KAAK;AACnB,gBAAI,QAAQ,IAAI,YAAY,yBAAyB,CAAC,CAAC;AACvD,mBAAO,cAAc,KAAK;AAAA,UAC9B,OAAK;AACD,iBAAK,UAAU;AACf,iBAAK,UAAU;AACf,iBAAK,QAAQ,CAAC,KAAK;AACnB,gBAAI,QAAQ,IAAI,YAAY,uBAAuB,CAAC,CAAC;AACrD,mBAAO,cAAc,KAAK;AAAA,UAC9B;AACA,iBAAO;AAAA,QACX,CAAC,EACA,MAAM,WAAS;AACZ,eAAK,UAAU;AACf,iBAAO;AAAA,QACX,CAAC;AAAA,MACL;AAAA,IACJ,EAAE;AAAA,EACN,CAAC;",
  "names": []
}
